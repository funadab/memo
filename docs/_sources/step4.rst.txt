学習STEP4の実施
===================

-----------------------------------------
AWS ECS上に構築するSpringアプリケーション
-----------------------------------------

https://news.mynavi.jp/itsearch/article/devsoft/4354
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| ・VPCは既存のものを流用した。
| ・インターネットGWは既存のものを流用した。
| ・パブリックとプライベートで2点ずつ別のAZに、計4点のサブネットを作成した。
| ・パブリックサブネットに既存のパブリックサブネット用ルートテーブルをアタッチした

https://news.mynavi.jp/itsearch/article/devsoft/4359
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| ・資料通りに実施した。
| ・パスベースルーティングのIFは暫定で"/"を設定した。
| ・GitHubから資材をgit cloneした。
| ★アノテーション全般がわからない
| @ComponentScan、@Configuration、@Autowired、@Controller、@RequestMapping、@ConfigurationProperties

| ★org.springframework.web.client.RestOperations
| 　→・RestTemplateのインターフェース
| 　　・Backendサービスを呼び出している
　　
https://news.mynavi.jp/itsearch/article/devsoft/4390
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| ・docekrをインストールした。

.. code-block:: bash

 [centos@ip-XXXX-XXX-XXX-XXX ~]$ sudo yum update -y
 // omit
 [centos@ip-XXX-XXX-XXX-XXX ~]$ sudo yum install -y docker
 // omit
 [centos@ip-XXX-XXX-XXX-XXX ~]$ sudo systemctl enable docker.service
 Created symlink from /etc/systemd/system/multi-user.target.wants/docker.serv    ice to /usr/ lib/systemd/system/docker.service.
 [centos@ip-XXX-XXX-XXX-XXX ~]$ sudo systemctl start docker.service

| ・docker buildコマンドを発行すると「yum install」の箇所でエラーとなり、Dockerイメージの作成が失敗した。

.. code-block:: bash

 [TEC\funadab@a-163tfnnkqtun2 mynavi-sample-aws-ecs]$ sudo docker build backend/ -t funadab/mynavi-sample-ecs-backend:latest
 Sending build context to Docker daemon  86.53kB
 Step 1/13 : FROM centos:centos7
  ---> eeb6ee3f44bd
 Step 2/13 : MAINTAINER funadab
  ---> Using cache
  ---> 55a84b2bce30
 Step 3/13 : RUN yum install -y        java-1.8.0-openjdk        java-1.8.0-openjdk-devel        wget tar iproute git
  ---> Running in 6f4576084e22
 Loaded plugins: fastestmirror, ovl
 Determining fastest mirrors
 Could not retrieve mirrorlist http://mirrorlist.centos.org/?release=7&arch=x86_64&repo=os&infra=container error was
 12: Timeout on http://mirrorlist.centos.org/?release=7&arch=x86_64&repo=os&infra=container: (28, 'Resolving timed out after 30541 milliseconds')


  One of the configured repositories failed (Unknown),
  and yum doesn't have enough cached data to continue. At this point the only
  safe thing yum can do is fail. There are a few ways to work "fix" this:

      1. Contact the upstream for the repository and get them to fix the problem.

      2. Reconfigure the baseurl/etc. for the repository, to point to a working
         upstream. This is most often useful if you are using a newer
         distribution release than is supported by the repository (and the
         packages for the previous distribution release still work).

      3. Run the command with the repository temporarily disabled
             yum --disablerepo=<repoid> ...

      4. Disable the repository permanently, so yum won't use it by default. Yum
         will then just ignore the repository until you permanently enable it
         again or use --enablerepo for temporary usage:

             yum-config-manager --disable <repoid>
         or
             subscription-manager repos --disable=<repoid>

      5. Configure the failing repository to be skipped, if it is unavailable.
         Note that yum will try to contact the repo. when it runs most commands,
         so will have to try and fail each time (and thus. yum will be be much
         slower). If it is a very temporary problem though, this is often a nice
         compromise:

             yum-config-manager --save --setopt=<repoid>.skip_if_unavailable=true

 Cannot find a valid baseurl for repo: base/7/x86_64
 The command '/bin/sh -c yum install -y        java-1.8.0-openjdk        java-1.8.0-openjdk-devel        wget tar iproute git' returned a non-zero code: 1


| →
| 以下手順①②を実施することで解決した。
| ①/usr/lib/systemd/system/docker.serviceを以下のように修正する。
| 修正前）ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock $OPTIONS $DOCKER_STORAGE_OPTIONS $DOCKER_ADD_RUNTIMES
| 修正後）ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock $OPTIONS $DOCKER_STORAGE_OPTIONS $DOCKER_ADD_RUNTIMES --dns=8.8.8.8

| ②以下コマンドを発行する。
| systemctl daemon-reload
| systemctl restart docker

| ・docker pushが拒否された。
| imageのユーザ名とdocker hubアカウント名は同じにする必要があったため、揃えることで解決した。
| https://qiita.com/shundayo/items/4ae35930fe9f85f535b0


AWS ECS上に構築するSpringアプリケーション(5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| ・パブリックIPの自動割り当ては「無効」にした
| →後工程で「有効」に設定変更した
| ・コンテナインスタンスIAMロール？
| コントロールプレーンとなるEC2インスタンスに設定されるIAMロールであり、AmazonEC2ContainerServiceforEC2Roleポリシーが付与されたIAMロール。

AWS ECS上に構築するSpringアプリケーション(6)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

| ・タスクロール？
| ECS上で動くAPに付与するIAMロール。

| ・タスク実行ロール？
| ECS上で動くタスクに付与するIAMロール。


AWS ECS上に構築するSpringアプリケーション(7)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| ・AmazonECSServiceRolePolicyをアタッチしたロールの作成をしようとしたところ、「このポリシーはサービスにリンクされていて、そのサービス用のサービスにリンクされたロールでのみ使用されます。このポリシーのアタッチ、デタッチ、変更、または削除はできません」とエラーが表示されたため、既存のロール「」を利用した。
| ・クラスタ/サービスを作成したが、タスクが起動されない
| →ECSインスタンスが起動されていないことが原因。
| →クラスタ作成時に「パブリックIPの児童割り当て」を無効にしていたことが原因。有効にしたところ事象が解消した。
| ・ブラウザでAPの動作確認を行った際に、BFFからバックエンドへの遷移でエラーが発生した。（Whitelabel Error Page）
| →application.yml内のservice配下のdnsにて定義されているALB名を修正した。
| ・修正、コミット、プッシュしてdocker buildしたが、docker imagesが更新されない。
| →--no-cacheオプションをつけてビルドしたところ、事象が解消した。
